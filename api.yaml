swagger: '2.0'
info:
  version: 0.1.0
  title: ChOrEgg
  description: |
    **This document describes the ChOrEgg API and its operations**

    You can try all HTTP operation described in this Swagger spec.
    
    Find source code of this API [here](https://github.com/dannyshay/ChOrEgg-Web)
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/users/:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        200:
          description:  List all users
          schema:
            title: Users
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Failed to retrieve user
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Users
      summary: Add a new user
      parameters:
        - name: User
          in: body
          description: The User JSON you want to post
          schema:
            $ref: '#/definitions/User'
          required: true
      responses:
        200:
          description: User created successfully
          schema:
            $ref: '#/definitions/User'
        400:
          description: Error adding new user
          schema:
            $ref: '#/definitions/Error'
        409:
          description: User already exists
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
          - Users
      summary: Update a user
      parameters:
        - name: User
          in: body
          description: The User JSON you want to post
          schema:
            $ref: '#/definitions/User'
          required: true
      responses:
        200:
          description: User updated successfully
          schema:
              $ref: '#/definitions/User'
        400:
          description: Failed to retrieve user
          schema:
            $ref: '#/definitions/Error'
    
  /api/users/{username}:
    get:
      tags:
        - Users
      summary: Gets a user
      parameters:
        - name: username
          in: path
          type: string
          description: Username of the User to be retrieved
          required: true
      responses:
        200:
          description: User retrieved successfully
          schema:
            $ref: "#/definitions/User"
        400:
          description: Failed to retrieve user
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Users
      summary: Deletes a User
      produces:
        - application/json
      parameters:
        - in: path
          name: username
          description: User ID to delete
          required: true
          type: string
      responses:
        200:
          description: User deleted successfully
        400:
          description: User not found
          schema:
              $ref: '#/definitions/Error'
  /api/users/getUsersByHighScore:
    get:
      tags:
        - Users
      summary: Gets users by high score
      parameters:
        - name: numUsers
          in: query
          description: The total number of users to return
          required: true
          type: integer
          format: Int32
      responses:
        200:
          description: Users retrieved successfully
          schema:
            title: Users
            type: array
            items:
              $ref: '#/definitions/User'
        400:
          description: Error retrieving users
          schema:
            $ref: '#/definitions/Error'
  /api/items:
    get:
      tags:
        - Items
      summary: Gets all items
      responses:
        200:
          description: Items retrieved successfully
          schema:
            title: Items
            type: array
            items:
              $ref: '#/definitions/Item'
        400:
          description: Error retrieving Items
          schema:
            $ref: '#/definitions/Error'
  /api/items/getItemsInTimespan:
    get:
      tags:
        - Items
      summary: Gets some item sets within a specific timespan
      parameters:
        - name: category
          in: query
          description: The category in which to retreive the item pairs
          required: true
          type: string
        - name: timeSpan
          in: query
          description: The timespan in which the items dates are to fall
          required: true
          type: integer
          format: Int32
        - name: numPairs
          in: query
          description: The number of item pairs to return
          required: true
          type: integer
          format: Int32
      responses:
        200:
          description: Item sets retrieved successfully
          schema:
            title: ItemSets
            type: array
            items:
              $ref: '#/definitions/ItemSets'
        400:
          description: Error retrieving items
          schema:
            $ref: '#/definitions/Error'
  /api/categories:
    get:
      tags:
        - Categories
      summary: Gets all categories
      responses:
        200:
          description: Categories retrieved successfully
          schema:
            title: Categories
            type: array
            items:
              $ref: '#/definitions/Category'
        400:
          description: Error retrieving categories
          schema:
            $ref: '#/definitions/Error'
  /api/difficulties:
      get:
        tags:
          - Difficulties
        summary: Gets all difficulties
        responses:
          200:
            description: Difficulties retrieved successfully
            schema:
              title: Difficulties
              type: array
              items:
                $ref: '#/definitions/Difficulty'
          400:
            description: Error retrieving difficulties
            schema:
              $ref: '#/definitions/Error'
  /api/getEnvironment:
    get:
      tags:
        - Other
      summary: Gets the current executing environment
      responses:
        200:
          description: Environment retrieved successfully
          schema:
            $ref: '#/definitions/Environment'
definitions:
  Environment:
    type: object
    properties:
      environment:
        type: string
    example:
      environment: 'PROD'
  User:
    type: object
    properties:
      username:
        type: string
      createdDate:
        type: string
      lastSignInDate:
        type: string
      totalRoundsPlayed:
        type: integer
        format: Int32
      highScore:
        type: integer
        format: Int32
    example:
      username: testUserName
      createdDate: 01/01/2016
      lastSignInDate: 06/15/2016
      totalRoundsPlayed: 75
      highScore: 15
  Item:
    type: object
    properties:
      category:
        type: string
      name:
        type: string
      date:
        type: integer
        format: Int32
      image:
        type: string
    example:
      category: People
      name: Winston Churchill
      date: 1874
      image: https://upload.wikimedia.org/wikipedia/commons/3/35/Churchill_portrait_NYP_45063.jpg
  ItemSets:
    type: object
    properties:
      itemSet:
        title: itemSets
        type: array
        items:
          $ref: '#/definitions/ItemSet'
  ItemSet:
    type: object
    properties:
      name:
        type: string
      date:
        type: integer
        format: Int32
      imageData:
        type: string
      category:
        type: string
      image:
        type: string
    example:
      name: Winston Churchill
      date: 1874
      image: https://upload.wikimedia.org/wikipedia/commons/3/35/Churchill_portrait_NYP_45063.jpg
      category: People
      imageData: 
  Category:
    type: object
    properties:
      categoryName:
        type: string
    example:
      categoryName: People
  Difficulty:
    type: object
    properties:
      difficultyName:
        type: string
      timeSpan:
        type: integer
        format: Int32
    example:
      difficultyName: Hard
      timeSpan: 10
  Error:
    type: object
    properties:
      Error:
        type: string
    example:
      Error: This is a sample error message